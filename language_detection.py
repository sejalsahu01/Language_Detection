# -*- coding: utf-8 -*-
"""Language_Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/sejalsahu01/Language_Detection/blob/main/Language_Detection.ipynb
"""

import streamlit as st
import pandas as pd
import numpy as np

st.title("LANUAGE DECTECTION")

data = pd.read_csv("language.csv")

from sklearn.feature_extraction.text import CountVectorizer

from sklearn.model_selection import train_test_split

from sklearn.naive_bayes import MultinomialNB

data.isnull().sum()          #checking the missing data

data['language'].value_counts()  #checking for each lanauages how many sentences they has

data.dtypes

x = np.array(data['Text'])

y = np.array(data['language'])

cv = CountVectorizer()       #Initializes a CountVectorizer object that will convert text to a matrix of token counts (features).
X = cv.fit_transform(x)      #Convert text data 'x' to numerical feature vectors

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size =0.33, random_state = 42 )

model = MultinomialNB()
model.fit(X_train,y_train)              #training the model

model.score(X_test,y_test)    #testing the model

user = st.text_input(("Enter a text : "))

# Transform the user input using the same CountVectorizer
data = cv.transform([user]).toarray()

# Use the trained model to predict the class of the user input
output = model.predict(data)

# Print the predicted class
st.write("Predicted Language:",output)